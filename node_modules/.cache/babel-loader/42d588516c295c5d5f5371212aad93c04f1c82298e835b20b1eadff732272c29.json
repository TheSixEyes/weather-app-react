{"ast":null,"code":"const API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\nexport const fetchWeatherByCity = async city => {\n  try {\n    const response = await fetch(`${BASE_URL}?q=${city}&appid=${API_KEY}&units=metric`);\n    if (!response.ok) {\n      throw new Error('City not found');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n    throw error;\n  }\n};\nexport const fetchWeatherForecast = async city => {\n  try {\n    const response = await fetch(`${BASE_URL}/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n    if (!response.ok) {\n      throw new Error('City not found');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching weather forecast:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_KEY","process","env","REACT_APP_API_KEY","BASE_URL","fetchWeatherByCity","city","response","fetch","ok","Error","data","json","error","console","fetchWeatherForecast"],"sources":["/Users/taylor/Desktop/Code/Weather/weather-app-react/src/utils/api.js"],"sourcesContent":["const API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\n\nexport const fetchWeatherByCity = async (city) => {\n    try {\n        const response = await fetch(`${BASE_URL}?q=${city}&appid=${API_KEY}&units=metric`);\n        if (!response.ok) {\n            throw new Error('City not found');\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Error fetching weather data:', error);\n        throw error;\n    }\n};\n\nexport const fetchWeatherForecast = async (city) => {\n    try {\n        const response = await fetch(`${BASE_URL}/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n        if (!response.ok) {\n            throw new Error('City not found');\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Error fetching weather forecast:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC7C,MAAMC,QAAQ,GAAG,iDAAiD;AAElE,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,IAAI,IAAK;EAC9C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,MAAME,IAAI,UAAUN,OAAO,eAAe,CAAC;IACnF,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACrC;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAG,MAAOT,IAAI,IAAK;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,eAAeE,IAAI,UAAUN,OAAO,eAAe,CAAC;IAC5F,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACrC;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}