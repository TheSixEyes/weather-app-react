{"ast":null,"code":"var _jsxFileName = \"/Users/taylor/Desktop/Code/Weather/weather-app-react/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport WeatherCard from './components/WeatherCard';\nimport { fetchWeatherByCity } from './utils/api';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [darkMode, setDarkMode] = useState(() => {\n    // Load dark mode preference from localStorage\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  useEffect(() => {\n    // Save dark mode preference to localStorage\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n  const handleSearch = async city => {\n    setLoading(true);\n    setError(null); // Clear previous error\n    try {\n      const data = await fetchWeatherByCity(city);\n      setWeatherData(data);\n    } catch (err) {\n      setError('Could not fetch weather data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchWeatherByLocation = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          const response = await fetch(`${BASE_URL}?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`);\n          const data = await response.json();\n          setWeatherData(data);\n        } catch (error) {\n          setError('Could not fetch weather data for your location.');\n        }\n      });\n    } else {\n      setError('Geolocation is not supported by your browser.');\n    }\n  };\n  const handleDarkModeToggle = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? 'dark' : '',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App \\uD83C\\uDF26\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeatherByLocation,\n      className: \"ml-2 p-2 bg-green-500 text-white rounded\",\n      children: \"Use My Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDarkModeToggle,\n      className: \"ml-2 p-2 bg-gray-500 text-white rounded\",\n      children: \"Toggle Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: \"#007bff\",\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"\\u26A0\\uFE0F \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherCard, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"HwrIoNFNzCDnY4PgdIT8pHiZ/Lc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","WeatherCard","fetchWeatherByCity","ClipLoader","jsxDEV","_jsxDEV","BASE_URL","API_KEY","process","env","REACT_APP_API_KEY","App","_s","weatherData","setWeatherData","loading","setLoading","error","setError","darkMode","setDarkMode","localStorage","getItem","setItem","handleSearch","city","data","err","fetchWeatherByLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","response","fetch","json","handleDarkModeToggle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onClick","color","size","_c","$RefreshReg$"],"sources":["/Users/taylor/Desktop/Code/Weather/weather-app-react/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport WeatherCard from './components/WeatherCard';\nimport { fetchWeatherByCity } from './utils/api';\nimport { ClipLoader } from 'react-spinners';\n\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst App = () => {\n    const [weatherData, setWeatherData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [darkMode, setDarkMode] = useState(() => {\n        // Load dark mode preference from localStorage\n        return localStorage.getItem('darkMode') === 'true';\n    });\n\n    useEffect(() => {\n        // Save dark mode preference to localStorage\n        localStorage.setItem('darkMode', darkMode);\n    }, [darkMode]);\n\n    const handleSearch = async (city) => {\n        setLoading(true);\n        setError(null); // Clear previous error\n        try {\n            const data = await fetchWeatherByCity(city);\n            setWeatherData(data);\n        } catch (err) {\n            setError('Could not fetch weather data. Please try again.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const fetchWeatherByLocation = async () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(async (position) => {\n                const { latitude, longitude } = position.coords;\n                try {\n                    const response = await fetch(\n                        `${BASE_URL}?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`\n                    );\n                    const data = await response.json();\n                    setWeatherData(data);\n                } catch (error) {\n                    setError('Could not fetch weather data for your location.');\n                }\n            });\n        } else {\n            setError('Geolocation is not supported by your browser.');\n        }\n    };\n\n    const handleDarkModeToggle = () => {\n        setDarkMode(!darkMode);\n    };\n\n    return (\n        <div className={darkMode ? 'dark' : ''}>\n            <h1>Weather App üå¶Ô∏è</h1>\n            <SearchBar onSearch={handleSearch} />\n            <button onClick={fetchWeatherByLocation} className=\"ml-2 p-2 bg-green-500 text-white rounded\">\n                Use My Location\n            </button>\n            <button onClick={handleDarkModeToggle} className=\"ml-2 p-2 bg-gray-500 text-white rounded\">\n                Toggle Dark Mode\n            </button>\n            {loading && <ClipLoader color=\"#007bff\" size={50} />}\n            {error && <p className=\"error\">‚ö†Ô∏è {error}</p>}\n            {weatherData && <WeatherCard data={weatherData} />}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}